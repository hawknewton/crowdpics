#!/usr/bin/env ruby

require 'rubygems'
require 'active_support'
require 'mail'
require 'uuid'
require 'exifr'
require 'rest_client'
require 'RMagick'
require 'tempfile'

include Magick

to = ARGV[0]
from = ARGV[1]

buf = STDIN.read

mail = Mail.read_from_string buf

image_attachments = mail.attachments.keep_if { |x| x.content_type.start_with? 'image/' }

image_attachments.each do |image_attachment|
  type = case image_attachment.content_type.gsub(/^image\/([^\s;]+).*/, '\1').downcase
    when 'jpg', 'jpeg', 'pjpeg' #WTF is a pjpeg?
      'jpg'
    when 'gif'
      'gif'
    when 'bmp', 'bitmap'
      'bmp'
    when 'png'
      'png'
    when 'tif'
      'tif'
    else
      raise "Unknown format: #{image_attachment.content_type}"
    end


  lat, long = nil
  image = image_attachment.body.decoded

  if ['jpg', 'tif'].include? type
    begin
      exif = EXIFR::JPEG.new(StringIO.new image)

      lat = exif.gps_latitude.to_f
      lon = exif.gps_longitude.to_f

      if exif.gps_latitude_ref == 'S'
        lat = 0 - lat
      end

      if exif.gps_longitude_ref == 'W'
        lon = 0 - lon
      end
    rescue Exception => e
      puts "Couldn't extract lat/long: #{e}"
    end
  end

  name = "#{UUID.generate.upcase}.#{type}"
  path = (File.join(File.dirname(__FILE__), "../db/pictures/#{name}"))

  #tempfiles taste like jesus

  tf = Tempfile.new ['image', '.jpeg']

  begin
    File.open(tf.path, "w+b", 0644) do |f|
      f.write image
    end
  rescue Exception => e
    raise "Couldn't save image to tempfile: #{e}"
  end

  timage = ImageList.new tf.path

  timage.resize_to_fit! 1024
  timage.write(path) { self.quality = 75 }

  puts "Wrote #{name}"

  json = ActiveSupport::JSON.encode(
    { email: from,
      name: name,
      hash: to.split('@')[0],
      lat: lat,
      lon: lon,
      date_taken: nil })


  RestClient.post('http://localhost:4000/images', json, content_type: :json)
end

puts "#{image_attachments.length} from #{from} to #{to}"
